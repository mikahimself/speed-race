using Godot;
using System;
using System.Collections.Generic;

public class TileMapParts : TileMap
{
    public static int[][] widestStraight = {
        new int[] { 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 9, 1, 1, 1 },
        new int[] { 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 9, 1, 1, 1 },
        new int[] { 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 9, 1, 1, 1 },
        new int[] { 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 9, 1, 1, 1 },
        new int[] { 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 9, 1, 1, 1 },
        new int[] { 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 9, 1, 1, 1 },
        new int[] { 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 9, 1, 1, 1 },
        new int[] { 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 9, 1, 1, 1 },
        new int[] { 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 9, 1, 1, 1 },
        new int[] { 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 9, 1, 1, 1 },
    };
    public static int[][] wideStraight = {
        new int[] { 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 9, 1, 1, 1, 1 },
        new int[] { 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 9, 1, 1, 1, 1 },
        new int[] { 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 9, 1, 1, 1, 1 },
        new int[] { 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 9, 1, 1, 1, 1 },
        new int[] { 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 9, 1, 1, 1, 1 },
        new int[] { 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 9, 1, 1, 1, 1 },
        new int[] { 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 9, 1, 1, 1, 1 },
        new int[] { 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 9, 1, 1, 1, 1 },
        new int[] { 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 9, 1, 1, 1, 1 },
        new int[] { 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 9, 1, 1, 1, 1 },
    };

    public static int[][] narrowStraight = {
        new int[] { 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 9, 1, 1, 1, 1, 1 },
        new int[] { 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 9, 1, 1, 1, 1, 1 },
        new int[] { 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 9, 1, 1, 1, 1, 1 },
        new int[] { 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 9, 1, 1, 1, 1, 1 },
        new int[] { 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 9, 1, 1, 1, 1, 1 },
        new int[] { 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 9, 1, 1, 1, 1, 1 },
        new int[] { 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 9, 1, 1, 1, 1, 1 },
        new int[] { 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 9, 1, 1, 1, 1, 1 },
        new int[] { 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 9, 1, 1, 1, 1, 1 },
        new int[] { 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 9, 1, 1, 1, 1, 1 },
    };

    public static int[][] narrowestStraight = {
        new int[] { 1, 1, 1, 1, 1, 1, 2, 0, 0, 9, 1, 1, 1, 1, 1, 1 },
        new int[] { 1, 1, 1, 1, 1, 1, 2, 0, 0, 9, 1, 1, 1, 1, 1, 1 },
        new int[] { 1, 1, 1, 1, 1, 1, 2, 0, 0, 9, 1, 1, 1, 1, 1, 1 },
        new int[] { 1, 1, 1, 1, 1, 1, 2, 0, 0, 9, 1, 1, 1, 1, 1, 1 },
        new int[] { 1, 1, 1, 1, 1, 1, 2, 0, 0, 9, 1, 1, 1, 1, 1, 1 },
        new int[] { 1, 1, 1, 1, 1, 1, 2, 0, 0, 9, 1, 1, 1, 1, 1, 1 },
        new int[] { 1, 1, 1, 1, 1, 1, 2, 0, 0, 9, 1, 1, 1, 1, 1, 1 },
        new int[] { 1, 1, 1, 1, 1, 1, 2, 0, 0, 9, 1, 1, 1, 1, 1, 1 },
        new int[] { 1, 1, 1, 1, 1, 1, 2, 0, 0, 9, 1, 1, 1, 1, 1, 1 },
        new int[] { 1, 1, 1, 1, 1, 1, 2, 0, 0, 9, 1, 1, 1, 1, 1, 1 },
    };

    public static int[][] narrowStraightRight = {
        new int[] { 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 9, 1, 1 },
        new int[] { 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 9, 1, 1 },
        new int[] { 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 9, 1, 1 },
        new int[] { 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 9, 1, 1 },
        new int[] { 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 9, 1, 1 },
        new int[] { 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 9, 1, 1 },
        new int[] { 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 9, 1, 1 },
        new int[] { 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 9, 1, 1 },
        new int[] { 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 9, 1, 1 },
        new int[] { 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 9, 1, 1 },
    };



    public static int[][] centerToRight = {
        new int[] { 1, 1, 1, 1,  1,  1,  1, 14, 15, 0,  0,  0,  0, 24, 1, 1 },
        new int[] { 1, 1, 1, 1,  1,  1,  1, 22,  0, 0,  0,  0,  0, 28, 1, 1 },
        new int[] { 1, 1, 1, 1,  1,  1,  1, 26,  0, 0,  0,  0,  0, 12, 1, 1 },
        new int[] { 1, 1, 1, 1,  1,  1,  1, 10,  0, 0,  0,  0, 18, 19, 1, 1 },
        new int[] { 1, 1, 1, 1,  1,  1, 14, 15,  0, 0,  0,  0, 24,  1, 1, 1 },
        new int[] { 1, 1, 1, 1,  1,  1, 22,  0,  0, 0,  0,  0, 28,  1, 1, 1 },
        new int[] { 1, 1, 1, 1,  1,  1, 26,  0,  0, 0,  0,  0, 12,  1, 1, 1 },
        new int[] { 1, 1, 1, 1,  1,  1, 10,  0,  0, 0,  0, 18, 19,  1, 1, 1 },
        new int[] { 1, 1, 1, 1,  1, 14, 15,  0,  0, 0,  0, 24,  1,  1, 1, 1 },
        new int[] { 1, 1, 1, 1,  1, 22,  0,  0,  0, 0,  0, 28,  1,  1, 1, 1 },
        new int[] { 1, 1, 1, 1,  1, 26,  0,  0,  0, 0,  0, 12,  1,  1, 1, 1 },
        new int[] { 1, 1, 1, 1,  1, 10,  0,  0,  0, 0, 18, 19,  1,  1, 1, 1 },
    };

    public static int[][] rightToCenter = {
        new int[] { 1, 1, 1, 1, 1, 25,  0,  0,  0, 0, 16, 17,  1,  1, 1, 1 },
        new int[] { 1, 1, 1, 1, 1, 29,  0,  0,  0, 0,  0, 23,  1,  1, 1, 1 },
        new int[] { 1, 1, 1, 1, 1, 13,  0,  0,  0, 0,  0, 27,  1,  1, 1, 1 },
        new int[] { 1, 1, 1, 1, 1, 20, 21,  0,  0, 0,  0, 11,  1,  1, 1, 1 },
        new int[] { 1, 1, 1, 1, 1,  1, 25,  0,  0, 0,  0, 16, 17,  1, 1, 1 },
        new int[] { 1, 1, 1, 1, 1,  1, 29,  0,  0, 0,  0,  0, 23,  1, 1, 1 },
        new int[] { 1, 1, 1, 1, 1,  1, 13,  0,  0, 0,  0,  0, 27,  1, 1, 1 },
        new int[] { 1, 1, 1, 1, 1,  1, 20, 21,  0, 0,  0,  0, 11,  1, 1, 1 },
        new int[] { 1, 1, 1, 1, 1,  1,  1, 25,  0, 0,  0,  0, 16, 17, 1, 1 },
        new int[] { 1, 1, 1, 1, 1,  1,  1, 29,  0, 0,  0,  0,  0, 23, 1, 1 },
        new int[] { 1, 1, 1, 1, 1,  1,  1, 13,  0, 0,  0,  0,  0, 27, 1, 1 },
        new int[] { 1, 1, 1, 1, 1,  1,  1, 20, 21, 0,  0,  0,  0, 11, 1, 1 },
    };

    public static int[][] centerToLeft = {
        new int[] { 1, 1,  2,  0,  0,  0, 0,  9,  1,  1,  1, 1, 1, 1, 1, 1 },
        new int[] { 1, 1, 25,  0,  0,  0, 0, 16, 17,  1,  1, 1, 1, 1, 1, 1 },
        new int[] { 1, 1, 29,  0,  0,  0, 0,  0, 23,  1,  1, 1, 1, 1, 1, 1 },
        new int[] { 1, 1, 13,  0,  0,  0, 0,  0, 27,  1,  1, 1, 1, 1, 1, 1 },
        new int[] { 1, 1, 20, 21,  0,  0, 0,  0, 11,  1,  1, 1, 1, 1, 1, 1 },
        new int[] { 1, 1, 1,  25,  0,  0, 0,  0, 16, 17,  1, 1, 1, 1, 1, 1 },
        new int[] { 1, 1, 1,  29,  0,  0, 0,  0,  0, 23,  1, 1, 1, 1, 1, 1 },
        new int[] { 1, 1, 1,  13,  0,  0, 0,  0,  0, 27,  1, 1, 1, 1, 1, 1 },
        new int[] { 1, 1, 1,  20, 21,  0, 0,  0,  0, 11,  1, 1, 1, 1, 1, 1 },
        new int[] { 1, 1, 1,   1, 25,  0, 0,  0,  0, 16, 17, 1, 1, 1, 1, 1 },
        new int[] { 1, 1, 1,   1, 29,  0, 0,  0,  0,  0, 23, 1, 1, 1, 1, 1 },
        new int[] { 1, 1, 1,   1, 13,  0, 0,  0,  0,  0, 27, 1, 1, 1, 1, 1 },
        new int[] { 1, 1, 1,   1, 20, 21, 0,  0,  0,  0, 11, 1, 1, 1, 1, 1 },
        new int[] { 1, 1, 1,   1,  1,  2, 0,  0,  0,  0,  9, 1, 1, 1, 1, 1 },
    };

    public static int[][] leftToCenter = {
        new int[] { 1, 1, 1,   1, 14, 15, 0,  0,  0,  0, 24, 1, 1, 1, 1, 1 },
        new int[] { 1, 1, 1,   1, 22,  0, 0,  0,  0,  0, 28, 1, 1, 1, 1, 1 },
        new int[] { 1, 1, 1,   1, 26,  0, 0,  0,  0,  0, 12, 1, 1, 1, 1, 1 },
        new int[] { 1, 1,  1,  1, 10,  0, 0,  0,  0, 18, 19, 1, 1, 1, 1, 1 },
        new int[] { 1, 1,  1, 14, 15,  0, 0,  0,  0, 24,  1, 1, 1, 1, 1, 1 },
        new int[] { 1, 1,  1, 22,  0,  0, 0,  0,  0, 28,  1, 1, 1, 1, 1, 1 },
        new int[] { 1, 1,  1, 26,  0,  0, 0,  0,  0, 12,  1, 1, 1, 1, 1, 1 },
        new int[] { 1, 1,  1, 10,  0,  0, 0,  0, 18, 19,  1, 1, 1, 1, 1, 1 },
        new int[] { 1, 1, 14, 15,  0,  0, 0,  0, 24,  1,  1, 1, 1, 1, 1, 1 },
        new int[] { 1, 1, 22,  0,  0,  0, 0,  0, 28,  1,  1, 1, 1, 1, 1, 1 },
        new int[] { 1, 1, 26,  0,  0,  0, 0,  0, 12,  1,  1, 1, 1, 1, 1, 1 },
        new int[] { 1, 1, 10,  0,  0,  0, 0, 18, 19,  1,  1, 1, 1, 1, 1, 1 },
    };


    public static int[][] narrowStraightLeft = {
        new int[] { 1, 1, 2, 0, 0, 0, 0, 9, 1, 1, 1, 1, 1, 1, 1, 1 },
        new int[] { 1, 1, 2, 0, 0, 0, 0, 9, 1, 1, 1, 1, 1, 1, 1, 1 },
        new int[] { 1, 1, 2, 0, 0, 0, 0, 9, 1, 1, 1, 1, 1, 1, 1, 1 },
        new int[] { 1, 1, 2, 0, 0, 0, 0, 9, 1, 1, 1, 1, 1, 1, 1, 1 },
        new int[] { 1, 1, 2, 0, 0, 0, 0, 9, 1, 1, 1, 1, 1, 1, 1, 1 },
        new int[] { 1, 1, 2, 0, 0, 0, 0, 9, 1, 1, 1, 1, 1, 1, 1, 1 },
        new int[] { 1, 1, 2, 0, 0, 0, 0, 9, 1, 1, 1, 1, 1, 1, 1, 1 },
        new int[] { 1, 1, 2, 0, 0, 0, 0, 9, 1, 1, 1, 1, 1, 1, 1, 1 },
        new int[] { 1, 1, 2, 0, 0, 0, 0, 9, 1, 1, 1, 1, 1, 1, 1, 1 },
        new int[] { 1, 1, 2, 0, 0, 0, 0, 9, 1, 1, 1, 1, 1, 1, 1, 1 },
    };

    public static int[][] widestToWide = {
        new int[] { 1, 1, 1, 14, 15, 0, 0, 0, 0, 0, 0, 16, 17, 1, 1, 1 },
        new int[] { 1, 1, 1, 22,  0, 0, 0, 0, 0, 0, 0,  0, 23, 1, 1, 1 },
        new int[] { 1, 1, 1, 26,  0, 0, 0, 0, 0, 0, 0,  0, 27, 1, 1, 1 },
        new int[] { 1, 1, 1, 10,  0, 0, 0, 0, 0, 0, 0,  0, 11, 1, 1, 1 },
    };

    public static int[][] wideToNarrow = {
        new int[] { 1, 1, 1, 1, 14, 15, 0, 0, 0, 0, 16, 17, 1, 1, 1, 1 },
        new int[] { 1, 1, 1, 1, 22,  0, 0, 0, 0, 0,  0, 23, 1, 1, 1, 1 },
        new int[] { 1, 1, 1, 1, 26,  0, 0, 0, 0, 0,  0, 27, 1, 1, 1, 1 },
        new int[] { 1, 1, 1, 1, 10,  0, 0, 0, 0, 0,  0, 11, 1, 1, 1, 1 },
    };

    public static int[][] narrowToNarrowest = {
        new int[] { 1, 1, 1, 1,  1, 14, 15, 0, 0, 16, 17,  1, 1, 1, 1, 1 },
        new int[] { 1, 1, 1, 1,  1, 22,  0, 0, 0,  0, 23,  1, 1, 1, 1, 1 },
        new int[] { 1, 1, 1, 1,  1, 26,  0, 0, 0,  0, 27,  1, 1, 1, 1, 1 },
        new int[] { 1, 1, 1, 1,  1, 10,  0, 0, 0,  0, 11,  1, 1, 1, 1, 1 },
    };

    public static int[][] narrowestToNarrow = {
        new int[] { 1, 1, 1, 1, 1, 25,  0, 0, 0,  0, 24, 1, 1, 1, 1, 1 },
        new int[] { 1, 1, 1, 1, 1, 29,  0, 0, 0,  0, 28, 1, 1, 1, 1, 1 },
        new int[] { 1, 1, 1, 1, 1, 13,  0, 0, 0,  0, 12, 1, 1, 1, 1, 1 },
        new int[] { 1, 1, 1, 1, 1, 20, 21, 0, 0, 18, 19, 1, 1, 1, 1, 1 },
    };

    public static int[][] narrowToWide = {
        new int[] { 1, 1, 1, 1, 25,  0, 0, 0, 0, 0,  0, 24, 1, 1, 1, 1 },
        new int[] { 1, 1, 1, 1, 29,  0, 0, 0, 0, 0,  0, 28, 1, 1, 1, 1 },
        new int[] { 1, 1, 1, 1, 13,  0, 0, 0, 0, 0,  0, 12, 1, 1, 1, 1 },
        new int[] { 1, 1, 1, 1, 20, 21, 0, 0, 0, 0, 18, 19, 1, 1, 1, 1 },
    };

    public static int[][] wideToWidest = {
        new int[] { 1, 1, 1, 25,  0, 0, 0, 0, 0, 0, 0,  0, 24, 1, 1, 1 },
        new int[] { 1, 1, 1, 29,  0, 0, 0, 0, 0, 0, 0,  0, 28, 1, 1, 1 },
        new int[] { 1, 1, 1, 13,  0, 0, 0, 0, 0, 0, 0,  0, 12, 1, 1, 1 },
        new int[] { 1, 1, 1, 20, 21, 0, 0, 0, 0, 0, 0, 18, 19, 1, 1, 1 },
    };

    public static int[][] twoLaneStart = {
        new int[] { 1, 1, 1, 2, 0, 0, 0, 34, 35, 0, 0, 0, 9, 1, 1, 1 },
        new int[] { 1, 1, 1, 2, 0, 0, 0, 34, 35, 0, 0, 0, 9, 1, 1, 1 },
        new int[] { 1, 1, 1, 2, 0, 0, 0, 36, 37, 0, 0, 0, 9, 1, 1, 1 },
        new int[] { 1, 1, 1, 2, 0, 0, 0, 38, 39, 0, 0, 0, 9, 1, 1, 1 },
    };

    public static int[][] twoLaneStraight = {        
        new int[] { 1, 1, 1, 2, 0, 0, 0, 34, 35, 0, 0, 0, 9, 1, 1, 1 },
        new int[] { 1, 1, 1, 2, 0, 0, 0, 34, 35, 0, 0, 0, 9, 1, 1, 1 },
        new int[] { 1, 1, 1, 2, 0, 0, 0, 34, 35, 0, 0, 0, 9, 1, 1, 1 },
        new int[] { 1, 1, 1, 2, 0, 0, 0, 34, 35, 0, 0, 0, 9, 1, 1, 1 },
        new int[] { 1, 1, 1, 2, 0, 0, 0, 34, 35, 0, 0, 0, 9, 1, 1, 1 },
        new int[] { 1, 1, 1, 2, 0, 0, 0, 34, 35, 0, 0, 0, 9, 1, 1, 1 },
        new int[] { 1, 1, 1, 2, 0, 0, 0, 34, 35, 0, 0, 0, 9, 1, 1, 1 },
        new int[] { 1, 1, 1, 2, 0, 0, 0, 34, 35, 0, 0, 0, 9, 1, 1, 1 },
        new int[] { 1, 1, 1, 2, 0, 0, 0, 34, 35, 0, 0, 0, 9, 1, 1, 1 },
        new int[] { 1, 1, 1, 2, 0, 0, 0, 34, 35, 0, 0, 0, 9, 1, 1, 1 },
    };

    public static int[][] twoLaneEnd = {
        new int[] { 1, 1, 1, 2, 0, 0, 0, 30, 31, 0, 0, 0, 9, 1, 1, 1 },
        new int[] { 1, 1, 1, 2, 0, 0, 0, 32, 33, 0, 0, 0, 9, 1, 1, 1 },
        new int[] { 1, 1, 1, 2, 0, 0, 0, 34, 35, 0, 0, 0, 9, 1, 1, 1 },
        new int[] { 1, 1, 1, 2, 0, 0, 0, 34, 35, 0, 0, 0, 9, 1, 1, 1 },
    };

    public static int[][] rightTurn = {
        new int[] { }
    };

    public static List<int[][]> mapParts = new List<int[][]> 
    { 
        widestStraight, 
        wideStraight,
        narrowStraight,
        narrowestStraight,
        widestToWide,
        wideToNarrow,
        narrowToNarrowest,
        narrowestToNarrow,
        narrowToWide,
        wideToWidest,
        twoLaneStart,
        twoLaneStraight,
        twoLaneEnd,
        narrowStraightRight,
        narrowStraightLeft,
        centerToRight,
        rightToCenter,
        centerToLeft,
        leftToCenter
    };
    /*
        0 - Widest
        1 - Wide
        2 - Narrow
        3 - Narrowest
        4 - Widest to Wide
        5 - Wide to Narrow
        6 - Narrow to Narrowest
        7 - Narrowest to Narrow
        8 - Narrow to Wide
        9 - Wide to Widest
       10 - Two Lane Start
       11 - Two Lane Straight
       12 - Two Lane End
    */

    public static int[] track = {
        9, 8, 7, 6, 5, 4, 12, 11, 10, 0, 9, 1, 8, 2, 7, 3, 6, 2, 5, 1, 4, 0, 12, 11, 10,2, 18, 17,
    };
}
